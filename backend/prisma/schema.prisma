// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// A Workspace represents a project directory the user is working on.
model Workspace {
  id                String   @id @default(cuid())
  name              String
  path              String   @unique // Absolute path to the project directory on the server
  selectedFiles     String[] // List of relative paths of files selected for the prompt
  lastFinalRequest  String?  @db.Text
  ignorePatterns    String[] // Workspace-specific ignore patterns
  
  // Project information settings
  projectInfo       String?  @db.Text // Custom project information for this workspace
  
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt

  // Relations
  defaultFormatId   String?
  defaultFormat     Format?  @relation("DefaultFormat", fields: [defaultFormatId], references: [id])
  defaultRoleId     String?
  defaultRole       Role?    @relation("DefaultRole", fields: [defaultRoleId], references: [id])
  
  // New Relation for Prompt Template
  defaultPromptTemplateId String?
  defaultPromptTemplate   PromptTemplate? @relation("DefaultPromptTemplate", fields: [defaultPromptTemplateId], references: [id])
}

// A Format defines how the LLM should structure its response.
model Format {
  id           String   @id @default(cuid())
  name         String   @unique
  instructions String   @db.Text
  examples     String   @db.Text
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  // Relations
  defaultForWorkspaces Workspace[] @relation("DefaultFormat")
}

// A Role defines the persona the LLM should adopt.
model Role {
  id          String   @id @default(cuid())
  name        String   @unique
  description String   @db.Text
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  defaultForWorkspaces Workspace[] @relation("DefaultRole")
}

// A PromptTemplate defines the structure of the system prompt.
model PromptTemplate {
  id        String   @id @default(cuid())
  name      String   @unique
  isDefault Boolean  @default(false)
  
  // -- Textes structurés pour chaque section du prompt --
  // Chaque champ a une valeur par défaut pour un fonctionnement immédiat.

  // Section: ROLE AND EXPERTISE
  role_intro           String @default("You are an expert software engineer. Your persona:") @db.Text

  // Section: DYNAMIC TASK
  task_header          String @default("DYNAMIC TASK - USER REQUEST")
  task_static_intro    String @default("[The following is the specific task you need to accomplish. While the rest of this prompt provides static context and guidelines, this section represents the dynamic user request that changes with each prompt generation.]") @db.Text
  task_format_reminder String @default("Your response must strictly follow the format specified in the FORMAT INSTRUCTIONS section below. This format is crucial for proper processing of your response.") @db.Text

  // Section: FORMAT INSTRUCTIONS
  format_header        String @default("FORMAT INSTRUCTIONS")
  
  // Section: PROJECT INFORMATION
  project_info_header  String @default("PROJECT INFORMATION")

  // Section: PROJECT STRUCTURE
  structure_header     String @default("PROJECT STRUCTURE")

  // Section: CODE CONTENT
  code_content_header  String @default("CODE CONTENT")
  file_separator       String @default("---------------------------------------------------------------------------")


  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  defaultForWorkspaces Workspace[] @relation("DefaultPromptTemplate")
}

// Global settings for the application.
model Setting {
  id                  Int      @id @default(1) // Singleton table
  globalIgnorePatterns String[]
}
